__START__
__NEW_EXAMPLE__
SIZE_ORIG:20
IN:let f := lambda x:Int. callcc
  (lambda k: Int -> Void.
     if x > 42
     then abort Int (k 42)
     else 2) in
1 + 2 + (f 100)
SYNTH:let f := lambda x : Int. callcc(lambda k : Int -> Void. if x > 42 then (abort Int(k 42)) else 2) in (1 + 2) + (f 100)
SIZE_SYNTH:20
TIME:329.90 us
__NEW_EXAMPLE__
SIZE_ORIG:20
IN:let f := lambda x:Int. callcc
  (lambda k: Int -> Void.
     if x = 0
     then abort Int (k x)
     else 2) in
1 + 2 + (f 100)
SYNTH:let f := lambda x : Int. callcc(lambda k : Int -> Void. if x = 0 then (abort Int(k x)) else 2) in (1 + 2) + (f 100)
SIZE_SYNTH:20
TIME:133.90 us
__NEW_EXAMPLE__
SIZE_ORIG:5
IN:(lambda f1:Bool->Int.(lambda f2:Int->Bool.(lambda f3:Bool->Bool.(lambda f4:Int->Bool.(lambda f5:Bool.{|Int|})))))
SYNTH:lambda f1 : Bool -> Int. lambda f2 : Int -> Bool. lambda f3 : Bool -> Bool. lambda f4 : Int -> Bool. lambda f5 : Bool. f1 f5
SIZE_SYNTH:8
TIME:154.30 us
__NEW_EXAMPLE__
SIZE_ORIG:2
IN:lambda f:Int->Int. lambda g:Bool->Int.{|Bool|}
SYNTH:ERROR
SIZE_SYNTH:None
TIME:306.38 ms
__NEW_EXAMPLE__
SIZE_ORIG:7
IN:let a := lambda z:Bool.(1+1) in
 (lambda f: Bool->Int*Int.(lambda g: (Int->Int) * Int. {|Int*Int|}))
SYNTH:let a := lambda z : Bool. 1 + 1 in lambda f : Bool -> (Int * Int). lambda g : (Int -> Int) * Int. (snd g, snd g)
SIZE_SYNTH:12
TIME:315.10 us
__NEW_EXAMPLE__
SIZE_ORIG:2
IN:(lambda f: Int*Int->Bool.(lambda i: Int.{|Bool|}))
SYNTH:lambda f : (Int * Int) -> Bool. lambda i : Int. f (i, i)
SIZE_SYNTH:7
TIME:30.40 us
__NEW_EXAMPLE__
SIZE_ORIG:5
IN:(lambda f: Bool->Int.(lambda g: Int->Bool.(lambda x: Bool.(g {|Int|}))))
SYNTH:lambda f : Bool -> Int. lambda g : Int -> Bool. lambda x : Bool. g (f x)
SIZE_SYNTH:8
TIME:20.80 us
__NEW_EXAMPLE__
SIZE_ORIG:11
IN:let b := true in if {| Bool |} then fst (3, 4) else snd (5, 6)
SYNTH:let b := true in if b then (fst (3, 4)) else (snd (5, 6))
SIZE_SYNTH:12
TIME:28.70 us
__NEW_EXAMPLE__
SIZE_ORIG:4
IN:lambda f: Int->(Int*Int).lambda f1: (Int*Int)->Bool.lambda f2: Bool->(Int*Bool).lambda f3:Int.{|Int*Bool|}
SYNTH:lambda f : Int -> (Int * Int). lambda f1 : (Int * Int) -> Bool. lambda f2 : Bool -> (Int * Bool). lambda f3 : Int. (lambda tmp : (Int * Int) -> (Int * Bool). f2 (f1 tmp)) (f f3)
SIZE_SYNTH:14
TIME:310.00 us
__NEW_EXAMPLE__
SIZE_ORIG:1
IN:lambda f:Int.{|Bool|}
SYNTH:ERROR
SIZE_SYNTH:None
TIME:665.60 us
__NEW_EXAMPLE__
SIZE_ORIG:1
IN:lambda f: Bool.{|Bool|}
SYNTH:lambda f : Bool. f
SIZE_SYNTH:2
TIME:11.90 us
__NEW_EXAMPLE__
SIZE_ORIG:2
IN:((lambda f: Int -> Bool.(lambda x: Int.{|Bool|})))
SYNTH:lambda f : Int -> Bool. lambda x : Int. f x
SIZE_SYNTH:5
TIME:22.20 us
__NEW_EXAMPLE__
SIZE_ORIG:2
IN:((lambda f: Bool -> Int.(lambda x: Bool.{|Int|})))
SYNTH:lambda f : Bool -> Int. lambda x : Bool. f x
SIZE_SYNTH:5
TIME:20.90 us
__NEW_EXAMPLE__
SIZE_ORIG:4
IN:lambda f: Int->(Int*Int).lambda f1:(Int*Int)->(Bool*(Int*Int)).lambda f2: (Bool*(Int*Int))->Bool.lambda x: Int.{|Bool|}
SYNTH:lambda f : Int -> (Int * Int). lambda f1 : (Int * Int) -> (Bool * (Int * Int)). lambda f2 : (Bool * (Int * Int)) -> Bool. lambda x : Int. (lambda tmp : (Int * Int) -> Bool. f2 (f1 tmp)) (f x)
SIZE_SYNTH:14
TIME:371.80 us
__NEW_EXAMPLE__
SIZE_ORIG:11
IN:lambda f1: Int->Bool.lambda f2:Int*Int.if (fst f2) > 1 then (if {|Bool|} then true else false) else false

SYNTH:lambda f1 : Int -> Bool. lambda f2 : Int * Int. if (fst f2) > 1 then (if f1 (fst f2) then true else false) else false
SIZE_SYNTH:15
TIME:52.20 us
__NEW_EXAMPLE__
SIZE_ORIG:4
IN:let a:=true in lambda f1: Bool->Int.lambda f: Int -> Int*Int.{|Int*Int|}
SYNTH:let a := true in lambda f1 : Bool -> Int. lambda f : Int -> (Int * Int). f (f1 a)
SIZE_SYNTH:9
TIME:83.00 us
__NEW_EXAMPLE__
SIZE_ORIG:9
IN:let a:=lambda z:Bool*Int.((snd z),(fst z)) in lambda f:Bool*Int->Int*Bool.(lambda x:Bool*Int.{|Int*Bool|})
SYNTH:let a := lambda z : Bool * Int. (snd z, fst z) in lambda f : (Bool * Int) -> (Int * Bool). lambda x : Bool * Int. a x
SIZE_SYNTH:12
TIME:26.70 us
__NEW_EXAMPLE__
SIZE_ORIG:7
IN:let a:=(snd (2,2)) in lambda f:Int->Int*Bool.(lambda x:Bool.{|Int*Bool|})
SYNTH:let a := snd (2, 2) in lambda f : Int -> (Int * Bool). lambda x : Bool. f a
SIZE_SYNTH:10
TIME:25.50 us
__NEW_EXAMPLE__
SIZE_ORIG:8
IN:lambda f:Int. if (f-1) > 1 then {|Int|} else 1
SYNTH:lambda f : Int. if (f - 1) > 1 then f else 1
SIZE_SYNTH:9
TIME:18.70 us
__NEW_EXAMPLE__
SIZE_ORIG:6
IN:lambda f:Int. if {|Int|} > 1 then true else false
SYNTH:lambda f : Int. if f > 1 then true else false
SIZE_SYNTH:7
TIME:14.30 us
__NEW_EXAMPLE__
SIZE_ORIG:2
IN:lambda f:Int->Int*Int.lambda g:Int.{|Int*Int|}
SYNTH:lambda f : Int -> (Int * Int). lambda g : Int. f g
SIZE_SYNTH:5
TIME:11.70 us
__NEW_EXAMPLE__
SIZE_ORIG:4
IN:(lambda f1:(Int*(Int*Int))->Bool.(lambda f2: Int->(Int*Int).(lambda f3: (Int*Int)->Bool.(lambda f4: Int.{|Bool|}))))
SYNTH:lambda f1 : (Int * (Int * Int)) -> Bool. lambda f2 : Int -> (Int * Int). lambda f3 : (Int * Int) -> Bool. lambda f4 : Int. f3 (f2 f4)
SIZE_SYNTH:9
TIME:342.60 us
__NEW_EXAMPLE__
SIZE_ORIG:2
IN:((lambda f: Int -> Bool.(lambda x: Int.{|Bool|})))
SYNTH:lambda f : Int -> Bool. lambda x : Int. f x
SIZE_SYNTH:5
TIME:12.30 us
__NEW_EXAMPLE__
SIZE_ORIG:5
IN:let f:=lambda x:Int.true in lambda g: Int->Bool.(lambda h:Int.{|Bool|})
SYNTH:let f := lambda x : Int. true in lambda g : Int -> Bool. lambda h : Int. f h
SIZE_SYNTH:8
TIME:16.70 us
__NEW_EXAMPLE__
SIZE_ORIG:5
IN:(lambda x:(Int*Int).{|Int|}) (1,2)
SYNTH:(lambda x : Int * Int. fst x) (1, 2)
SIZE_SYNTH:7
TIME:14.10 us
__NEW_EXAMPLE__
SIZE_ORIG:2
IN:lambda f: Int*(Int->Bool).(lambda g:Int->Bool.{|Int|})
SYNTH:lambda f : Int * (Int -> Bool). lambda g : Int -> Bool. fst f
SIZE_SYNTH:4
TIME:13.70 us
__NEW_EXAMPLE__
SIZE_ORIG:7
IN:let x:=lambda z: Int*Int.(1,true) in lambda f: Int*Bool->Bool.(lambda g:(Int*Int)*(Int*Int).{|Bool|})
SYNTH:let x := lambda z : Int * Int. (1, true) in lambda f : (Int * Bool) -> Bool. lambda g : (Int * Int) * (Int * Int). (lambda tmp : (Int * Int) -> Bool. f (x tmp)) (fst g)
SIZE_SYNTH:16
TIME:178.70 us
__NEW_EXAMPLE__
SIZE_ORIG:7
IN:let a:=1 in (snd (10, 1+{|Int|}))
SYNTH:let a := 1 in snd (10, 1 + a)
SIZE_SYNTH:8
TIME:15.70 us
__NEW_EXAMPLE__
SIZE_ORIG:7
IN:let a:= true in lambda f: Bool->Int.(lambda g:(Bool*(Bool*(Bool*(Bool*Bool))))->Int.if {|Bool|} then 1 else 0)
SYNTH:let a := true in lambda f : Bool -> Int. lambda g : (Bool * (Bool * (Bool * (Bool * Bool)))) -> Int. if a then 1 else 0
SIZE_SYNTH:8
TIME:29.10 us
__NEW_EXAMPLE__
SIZE_ORIG:4
IN:lambda g:(Bool*(Bool*(Bool*(Bool*Bool))))->Int.if {|Bool|} then 1 else 0
SYNTH:ERROR
SIZE_SYNTH:None
TIME:6.64 ms
__NEW_EXAMPLE__
SIZE_ORIG:9
IN:(lambda f:Int->Bool.(lambda g: (Int*(Int*Int)).if {|Bool|} then (fst (snd g)) else (snd (snd g))))
SYNTH:lambda f : Int -> Bool. lambda g : Int * (Int * Int). if f (fst g) then (fst (snd g)) else (snd (snd g))
SIZE_SYNTH:13
TIME:90.80 us
__NEW_EXAMPLE__
SIZE_ORIG:4
IN:lambda f1:(Bool*(Int*Int))->(Int*Int).lambda f2:Int.lambda f3:Bool->Int.lambda f4:Bool.{|Int*Int|}
SYNTH:lambda f1 : (Bool * (Int * Int)) -> (Int * Int). lambda f2 : Int. lambda f3 : Bool -> Int. lambda f4 : Bool. (f2, f2)
SIZE_SYNTH:7
TIME:31.20 us
__NEW_EXAMPLE__
SIZE_ORIG:10
IN:1 + callcc (lambda k: Int->Void. 2 + abort Int (k 5))
SYNTH:1 + (callcc(lambda k : Int -> Void. 2 + (abort Int(k 5))))
SIZE_SYNTH:10
TIME:368.90 us
__NEW_EXAMPLE__
SIZE_ORIG:4
IN:(if true then 1 else 2)
SYNTH:if true then 1 else 2
SIZE_SYNTH:4
TIME:15.20 us
__NEW_EXAMPLE__
SIZE_ORIG:9
IN:(((1 + 2) - 4) * (0 - 1))
SYNTH:((1 + 2) - 4) * (0 - 1)
SIZE_SYNTH:9
TIME:21.30 us
__END__
